#
# This helper script will install smartmontools set "smartd.conf" and configure regular testing schedule
# Will also install the nvme-cli utils for supporting NVMe devices.
#
---
- name: Install and Configure SmartMon Tools Block
  when:
    - ansible_os_family == "Debian"
  tags:
    - setup_smartmontools
  block:
    - name: Install packages
      ansible.builtin.apt:
        name: ['smartmontools', 'nvme-cli']
        state: present
        install_recommends: false
      when:
        - ansible_os_family == "Debian"

    # Remove any pre-existing devices, detected devices will be added back.
    - name: Remove existing devices from /etc/smartd.conf
      ansible.builtin.lineinfile:
        path: "/etc/smartd.conf"
        regexp: "^(\/dev\/disk\/by-id\/*)"
        state: absent

    - name: Add DEFAULT setting for all devices to /etc/smartd.conf
      ansible.builtin.lineinfile:
        path: "/etc/smartd.conf"
        regexp: "^DEFAULT"
        line: "{{ smartd_conf_values }}"
        state: present

    # Add one line per device to "/etc/smartd.conf" replace any existing line for device
    - name: Add devices to /etc/smartd.conf
      ansible.builtin.lineinfile:
        path: "/etc/smartd.conf"
        regexp: '^{{ item }}'
        line: '{{ item }} '
        state: present
      loop: "{{ disk_by_id | list }}"

    # Disable existing DEVICESCAN entry if not enabled
    - name: Disable DEVICESCAN in /etc/smartd.conf
      ansible.builtin.lineinfile:
        path: "/etc/smartd.conf"
        regexp: '(?i)^(DEVICESCAN.*)'
        line: '# \1'
        backrefs: true
        state: present

    - name: Restart smartd service
      ansible.builtin.systemd:
        name: smartd
        state: restarted

- name: Install SmartMon Node Exporter Script Block
  when:
    - ansible_os_family == "Debian"
    - smartd_node_export_path is defined
  tags:
    - setup_smartmon_node_exporter
  block:
    - name: Create directory for Node Exporter Scripts
      ansible.builtin.file:
        path: "{{ smartd_node_export_path }}"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "755"

    - name: Clone GIT repository - overwrite anything locally modified
      ansible.builtin.git: # noqa latest[git]
        repo: "{{ smartd_nvme_repo }}"
        accept_hostkey: true
        clone: true
        force: true
        dest: "{{ git_root_path }}/smartmon_nvme"

    - name: Copy Smartmon Node Exporter Script for Prometheus
      ansible.builtin.copy:
        src: "{{ git_root_path }}/smartmon_nvme/{{ item }}"
        dest: "{{ smartmon_exporter_dest_path }}"
        remote_src: true
        force: true
        owner: "root"
        group: "root"
        mode: "755"
      loop:
        - "exporter/smartmon.sh"

    - name: Install packages for Node Exporter Scripts
      ansible.builtin.apt:
        name: ['moreutils']
        state: present
        install_recommends: false
      when:
        - ansible_os_family == "Debian"
        - smartd_node_export_path is defined

    - name: Add CRON Jobs for Smartmon Node Exporter Scripts
      ansible.builtin.cron:
        name: "{{ item.name }}"
        minute: "{{ item.minute }}"
        hour: "{{ item.hour }}"
        job: "{{ item.job }}"
        user: "root"
      loop:
        - { name: "Smartmon-node-exporter", minute: "{{ smartd_nvme_script_cron_minute }}", hour: "{{ smartd_nvme_script_cron_hour }}",
            job: "{{ smartmon_exporter_dest_path }}/{{ smartd_nvme_script }} | /usr/bin/sponge {{ smartd_node_export_path }}/smartmon.prom" }

- name: Install HDD Temp Block
  block:

  ###[ Install Packages ]######################################################
  - name: Install packages needed for HDD Temp
    apt:
      name: ['hddtemp']
      state: present
      install_recommends: no
    when:
      - ansible_os_family == "Debian"

  ###[ Configure HDDTemp ]#####################################################

  # HDDTemp may not detect Temperature Sensors for SSDs, add manual entries
  - name: Add manual entries to /etc/hddtemp.db
    lineinfile:
      path: "/etc/hddtemp.db"
      regexp: "^{{item}}"
      line: "{{item}}"
      state: present
    loop: "{{manual_entries_to_hddtemp|list}}"

  # Get the last device letter from each active device, this is needed for hddtmp monitoring
  # If "disk_devices" contains ['sda','sdb','sdc'] then device_letters is "abc"
  - name: Construct device letter string
    set_fact:
      device_letters: "{{device_letters|default('') + item[-1]}}"
    loop:
     "{{disk_devices}}"

  # hddtemp can only take a limited number of devices; which is a limit on the number of
  # parameters which can be passed via the command line.  Break up the disk device list 
  # into chunks the size defined by "hddtemp_num_devices"
  
  - name: "Chunk device letter string by {{hddtemp_num_devices}}"
    set_fact:
      device_letters: "{{ device_letters | regex_findall('.{1,' + hddtemp_num_devices|string +'}') }}"

  - name: Creates @reboot CRON entry for HDDTemp instances
    cron:
      name: "Load hddtemp at reboot for port {{hddtemp_port+hddtemp_num_instances}}"
      special_time: reboot
      job: "/usr/sbin/hddtemp -d /dev/sd[{{item}}] --unit={{hddtemp_temp_unit}} --listen=localhost --port={{hddtemp_port+hddtemp_num_instances}}"
    loop:
      "{{device_letters}}"
    loop_control:
      index_var: hddtemp_num_instances

  tags:
  - install_hdd_temp
